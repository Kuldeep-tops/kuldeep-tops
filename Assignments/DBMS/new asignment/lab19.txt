1.
-- Start a new transaction
BEGIN;

-- Create a savepoint named 'savepoint_1'
SAVEPOINT savepoint_1;

-- Insert a record into the 'employees' table (assuming the table exists)
INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (101, 'John', 'Doe');

-- Insert another record
INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (102, 'Jane', 'Smith');

-- Insert a third record (for example)
INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (103, 'Alice', 'Johnson');

-- Rollback to the savepoint, so the last inserted records will be undone
ROLLBACK TO SAVEPOINT savepoint_1;

-- At this point, only the first insert will remain, and the other two insertions are rolled back

-- Commit the transaction to save the remaining changes (only the first insertion)
COMMIT;

2.

-- Step 1: Start a new transaction
BEGIN;

-- Step 2: Create a savepoint named 'savepoint_1'
SAVEPOINT savepoint_1;

-- Step 3: Insert records (some of them will be kept, others rolled back)
INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (101, 'John', 'Doe');  -- This will be kept

INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (102, 'Jane', 'Smith');  -- This will be rolled back

INSERT INTO employees (employee_id, first_name, last_name) 
VALUES (103, 'Alice', 'Johnson');  -- This will be rolled back

-- Step 4: Commit the changes up to the savepoint (only the first insert will be kept)
COMMIT;

-- Step 5: Rollback to the savepoint, undoing the changes made after it (the last two inserts will be undone)
ROLLBACK TO SAVEPOINT savepoint_1;

-- At this point, only the first insert (John Doe) will remain in the database, 
-- and the second and third inserts (Jane Smith and Alice Johnson) will be rolled back.

-- Optional: Final commit to confirm the transaction
COMMIT;
