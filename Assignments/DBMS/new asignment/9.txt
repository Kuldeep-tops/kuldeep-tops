1. What is the purpose of GRANT and REVOKE in SQL?

In SQL, the GRANT and REVOKE commands are used to manage permissions (or privileges) for users or roles on database objects such as tables, views, or procedures. 
These commands help control access to data and operations in the database.
1. GRANT
The GRANT command is used to give specific permissions to users or roles. It allows a user or role to perform actions on a database object. 
These permissions can include the ability to SELECT, INSERT, UPDATE, DELETE, or other database actions, depending on the database system.
2. REVOKE
The REVOKE command is used to remove or withdraw previously granted privileges. It effectively reverses the effects of the GRANT command.

2. How do you manage privileges using these commands?
To manage privileges in SQL using the GRANT and REVOKE commands

1. Grant Privileges (Using GRANT)
You use the GRANT command to assign specific permissions to users or roles.
 Privileges define what a user can do with a database object, like reading data, modifying it, or performing administrative tasks.
Example: Granting Specific Privileges
GRANT SELECT, INSERT ON employees TO john;
Grant ALL privileges on a table (providing full access):
GRANT ALL PRIVILEGES ON employees TO john;
Grant with the WITH GRANT OPTION: Allows the user to pass on their privileges to other users.
GRANT SELECT ON employees TO john WITH GRANT OPTION;
Granting Privileges to Roles
Roles can be used to group privileges and assign them to users.
GRANT SELECT, UPDATE ON employees TO hr_role;
This assigns both SELECT and UPDATE permissions to the role hr_role, and users assigned to hr_role will inherit these privileges.
2. Revoke Privileges (Using REVOKE)
The REVOKE command removes privileges previously granted to users or roles. This is useful when you need to restrict or change access.
REVOKE SELECT ON employees FROM john;
REVOKE ALL PRIVILEGES ON employees FROM john;
Revoke Privileges from Roles
If a role is assigned privileges and a user has that role, you can revoke the privileges from the role:
REVOKE SELECT, UPDATE ON employees FROM hr_role;
This removes SELECT and UPDATE access from the role hr_role, and any user with that role will lose those privileges.
3. Viewing Privileges
To check what privileges a user or role has, you can query the database's system tables (this varies by DBMS). For example:
SHOW GRANTS FOR 'john';