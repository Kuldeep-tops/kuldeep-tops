1.Introduction to for and while loops.

ans.In Python, loops are used to execute a block of code repeatedly, based on a condition. 
1.for loop:
The for loop in Python is used to iterate over a sequence (such as a list, tuple, string, or range).
It will repeat the block of code for each item in the sequence.
syntax:
for variable in sequence:
    # code to execute

2.while loop:
The while loop in Python repeatedly executes a block of code as long as the specified condition is True. 
Once the condition becomes False, the loop stops.
syntax:
while condition:
    # code to execute

2. How loops work in Python
ans.loops are used to repeat a block of code multiple times, which is helpful when you need to perform the same task several times. 
The two primary types of loops in Python are the for loop and the while loop. Let's go through each one and understand how they work.

1.for loop:
The loop begins by taking the first element from the sequence.
It executes the code inside the loop body.
It moves to the next element in the sequence and repeats the process.
The loop ends when it has processed all elements in the sequence.

2.while loop:
The loop checks the condition at the beginning.
If the condition is True, it executes the block of code inside the loop.
After executing the code, it checks the condition again.
If the condition is still True, it repeats the process. 
If the condition becomes False, the loop stops.

3.Using loops with collections (lists, tuples, etc.).
we can use loops (such as for and while) to iterate over various collections like lists, tuples, dictionaries, sets, and strings. 
it is a very useful feature because it allows you to process each element in the collection without having to manually access each one.

1.list:
A list is an ordered collection that can hold multiple items.
we can use loop through a list to access each item one by one.
ex: fruits = ['apple', 'banana', 'cherry', 'date']

2.Tuples:
A tuple is similar to a list, but it is immutable (you cannot modify its elements).
You can loop through a tuple in the same way as you do with lists.
ex: numbers = (1, 2, 3, 4, 5)

3.Dictionaries:
A dictionary is an unordered collection of key-value pairs.
When looping through a dictionary, you can loop through the keys, values, or both.
ex: grades = {'Alice': 85, 'Bob': 92, 'Charlie': 78}

4. Sets:
A set is an unordered collection of unique elements.
A set is an unordered collection that does not allow duplicate elements. 
You can loop through a set to access its items.
ex: fruits_set = {'apple', 'banana', 'cherry'}

5.Strings:
A string is essentially a sequence of characters, so you can loop through a string character by character.
ex: word = "Python"
